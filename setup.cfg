[metadata]
name = frkl.project-meta
description = Manage and display metadata for a project created with the frkl.python-project template.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://gitlab.com/frkl/frkl_project_meta
author = Markus Binsteiner
author_email = markus@frkl.io
license = "The Parity Public License 6.0.0"
license_file = LICENSE
platforms = any
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[options]
packages = find_namespace:
install_requires =
    appdirs>=1.4.4,<2.0.0
    importlib.metadata;python_version<'3.8'

python_requires = >=3.6
include_package_data = True
package_dir =
    =src
setup_requires =
    setuptools_scm
    setuptools_scm_git_archive
zip_safe = False

[options.entry_points]
console_scripts =
    frkl-project = frkl.project_meta.interfaces.cli:cli

[options.extras_require]
build =
    pyinstaller
    jinja2
    pp-ez
    deepdiff
doc =
    deepdiff
cli =
    asyncclick>=7.0.9,<8.0.0
    uvloop>=0.14.0,<1.0.0;platform_system=="Linux"
develop =
    black
    cruft
    flake8
    importanize
    ipython
    pip-licenses
    pp-ez
    pre-commit
    setup-cfg-fmt
    watchgod
    wheel
docs =
    deepdiff
    formic2
    livereload
    markdown-blockdiag
    markdown-include
    mkdocs-macros-plugin
    mkdocs-material
    mkdocs-simple-hooks
    pip-licenses
    pydoc-markdown
    pymdown-extensions
    watchgod
testing =
    flake8
    mypy
    pytest
    pytest-cov
    tox

[options.packages.find]
where = src
exclude =
    tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
universal = 1

[devpi:upload]
no-vcs = 1
formats = sdist, bdist_wheel

[tool:pytest]
addopts =
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
pep8maxlinelength = 88

[tox:tox]
envlist = py36, py37, py38, flake8

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -e{toxinidir}[testing,all]
install_command = pip install --pre --extra-index-url=https://pkgs.frkl.io/frkl/dev --extra-index-url=https://pkgs.frkl.dev/pypi {opts} {packages}
commands =
    pip install -U pip
    py.test --basetemp={envtmpdir}

[testenv:flake8]
basepython = python
deps =
    -e{toxinidir}[testing,all]
    flake8
install_command = pip install --pre --extra-index-url=https://pkgs.frkl.io/frkl/dev --extra-index-url=https://pkgs.frkl.dev/pypi {opts} {packages}
commands = flake8 src

[coverage:run]
branch = True
source = frkl.project_meta

[coverage:paths]
source =
    src/
    */site-packages/

[coverage:report]
exclude_lines =
    pragma: no cover

    def __repr__
    if self\.debug

    raise AssertionError
    raise NotImplementedError

    if 0:
    if __name__ == .__main__.:

[flake8]
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    .git
    __pycache__
ignore = F405, W503, E501
max-line-length = 88

[importanize]
after_imports_new_lines = 2
length = 88
exclude =
    .tox/*
groups =
    stdlib
    sitepackages
    remainder
    local

[mypy]
python_version = 3.8
mypy_path =
    src/
namespace_packages = false

[mypy-frkl.project_meta.app_environment]
ignore_missing_imports = true

[mypy-appdirs]
ignore_missing_imports = true

[mypy-asyncclick]
ignore_missing_imports = true

[mypy-deepdiff]
ignore_missing_imports = true

[mypy-importlib_metadata]
ignore_missing_imports = true

[mypy-uvloop]
ignore_missing_imports = true
